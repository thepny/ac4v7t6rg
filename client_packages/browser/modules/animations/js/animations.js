const SVGImages = {
    actions:'<svg viewBox="0 0 19 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.50399 23.7523C2.63264 22.6588 5.47065 22.2007 8.16335 22.0235C8.16449 22.0176 8.16449 22.0124 8.16679 22.0088C8.98471 18.9016 9.20986 15.6603 9.49131 12.4226L3.79059 15.5269C3.54705 15.6592 3.28686 15.7212 3.02954 15.7212C2.45229 15.7212 1.89284 15.4053 1.60221 14.8512C1.26792 14.2135 1.39371 13.4564 1.85149 12.955L1.6292 9.06143C1.33799 9.01053 1.11456 8.75252 1.11456 8.44068C1.11456 8.12358 1.34488 7.8644 1.64413 7.81935C1.73431 7.54963 1.98302 7.35539 2.27825 7.35539H4.34142L5.1513 4.85894H8.0479C7.7452 4.36982 7.56542 3.7912 7.56542 3.16928C7.56542 1.41877 8.95829 0 10.6757 0C12.3937 0 13.7865 1.41877 13.7865 3.16869C13.7865 4.91861 12.3937 6.33739 10.6757 6.33739C9.76472 6.33739 8.94795 5.93603 8.37931 5.30066H5.46376L4.79748 7.35481H4.8509C5.14326 7.35481 5.38967 7.54437 5.48444 7.80999H5.52637C5.86812 7.80999 6.14498 8.09198 6.14498 8.4401C6.14498 8.7572 5.91637 9.01697 5.61712 9.06143L5.46146 10.8798L10.4149 8.18267C10.6246 8.06858 10.8468 8.01008 11.0697 7.99486C11.2742 7.87259 11.5005 7.77898 11.7458 7.71696C11.991 7.59995 12.2661 7.53793 12.5545 7.56192C16.4838 7.88897 17.3408 10.5592 17.9674 12.5092C18.2035 13.2452 18.4264 13.9403 18.779 14.5563C19.2299 15.3427 18.9686 16.3507 18.1972 16.8094C17.941 16.9627 17.6607 17.0341 17.3833 17.0341C16.8273 17.0341 16.2851 16.7421 15.9852 16.2167C15.4585 15.297 15.1581 14.3603 14.8928 13.5342C14.8922 13.5313 14.8911 13.529 14.8899 13.5254C14.605 16.8667 14.315 20.2817 13.4775 23.4592C13.0783 24.971 11.8537 25.5549 10.6694 25.4461C10.4942 25.5104 10.3098 25.5561 10.1134 25.5596C7.49017 25.6304 4.68146 26.0142 3.95487 26.3974C3.65446 26.9397 3.28514 29.342 3.90547 33.9418C4.03872 34.9323 3.35808 35.8467 2.38566 35.9824C2.30352 35.9947 2.22139 36 2.14097 36C1.26677 36 0.502842 35.3418 0.380499 34.4338C-0.378258 28.8037 -0.00146294 25.2091 1.50399 23.7523Z"/><path d="M16.1472 18.2691H18.8692L18.8744 34.8234H5.6826L4.87502 27.2451L14.207 26.4231L16.1472 18.2691Z"/></svg>',
    dancing:'<svg viewBox="0 0 22 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M21.5416 23.0133C20.8241 22.1576 19.7332 22.0602 18.8399 22.7449C17.7844 23.5535 16.24 24.5926 14.9673 25.2693C14.55 23.9374 14.3694 22.1582 14.0332 20.7205L14.0616 12.4977C14.0616 12.4977 18.728 11.9082 20.0747 11.7129C21.5096 11.5849 21.7292 10.3776 21.4238 9.52991C21.3498 9.32379 19.4751 4.19003 19.1483 3.19793C18.8275 2.22452 17.9632 1.64637 16.8527 1.94479C15.8239 2.22113 15.5143 3.17075 15.828 4.1453C16.2655 5.5083 17.4304 8.80226 17.4304 8.80226L13.3424 9.33002L6.73257 7.97042C5.04963 6.26143 3.96635 4.35595 3.57329 1.59937C3.42885 0.58745 2.76112 -0.120948 1.55352 0.0172203C0.494511 0.138401 -0.124086 1.0869 0.0209438 2.09825C0.613494 6.2586 2.57169 9.77794 5.56523 12.1183V20.2584C3.51054 25.284 3.48627 30.4704 6.51532 35.0742C6.90957 35.6721 7.58203 36 8.26929 36C8.64696 36 9.02819 35.8998 9.37093 35.6953C10.3376 35.1115 10.6288 33.8901 10.0197 32.9637C8.34151 30.4144 7.56368 27.3203 8.40308 23.7194C8.53804 23.1401 9.0862 22.7335 9.70657 22.755H9.70835C10.2926 22.7749 10.7881 23.1679 10.9177 23.7126C11.2865 25.2534 11.4688 26.7546 11.7476 27.6917C12.294 29.5242 14.2043 29.8487 15.4202 29.2371C17.8922 27.9941 19.436 27.1023 21.2172 25.7965C22.1259 25.1311 22.2561 23.8655 21.5416 23.0133Z"/><path d="M10.63 7.74561C12.3834 7.74561 13.8047 6.38595 13.8047 4.70873C13.8047 3.03151 12.3834 1.67185 10.63 1.67185C8.8767 1.67185 7.45535 3.03151 7.45535 4.70873C7.45535 6.38595 8.8767 7.74561 10.63 7.74561Z"/></svg>',
    emotion:'<svg viewBox="0 0 21 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.21961 7.6642C7.80431 7.6642 9.08897 6.43571 9.08897 4.92028C9.08897 3.40485 7.80431 2.17635 6.21961 2.17635C4.63491 2.17635 3.35026 3.40485 3.35026 4.92028C3.35026 6.43571 4.63491 7.6642 6.21961 7.6642Z"/><path d="M5.89542 12.0728C6.24573 11.3187 6.57757 10.6061 6.95526 10.0013C7.21513 9.58465 7.18647 9.19484 7.00558 8.88237C6.62979 8.39511 5.93873 8.11675 5.31836 8.26233C5.09798 8.35003 4.89353 8.51022 4.73302 8.76787C4.33367 9.40619 3.67827 10.7979 3.67127 10.812L2.06494 14.0486L1.67832 13.8464L2.90568 10.4477C2.91332 10.4288 3.16746 9.88919 3.46044 9.31909C2.77002 9.5615 2.05538 9.91295 1.33502 10.4142C1.33502 10.4142 -0.729898 12.116 0.276447 15.5019C0.539498 16.8054 2.19678 16.5903 2.19678 16.5903C4.05279 16.0276 4.98907 14.0206 5.89542 12.0728Z"/><path d="M10.0979 9.84412C9.99213 9.77286 9.8864 9.71865 9.78067 9.67784C9.50552 9.5414 8.8635 9.25453 7.97116 9.05901C8.0546 9.48293 7.98517 9.95132 7.69028 10.4221C7.33869 10.9849 7.01705 11.675 6.67756 12.4065C6.38267 13.0412 6.07376 13.7008 5.72281 14.327C5.95656 14.2722 6.20751 14.2496 6.47693 14.2752C7.10876 14.3337 7.68455 14.3672 8.23676 14.3769L8.40491 14.38C8.66987 14.3855 9.39915 14.4007 9.73099 14.3654C9.79659 13.9762 9.51507 13.4791 9.16858 13.1259C8.81191 12.7616 8.52465 12.4979 8.23485 12.2719C8.20428 12.2482 8.16479 12.2171 8.12339 12.1787C8.09409 12.1623 8.06543 12.1446 8.03613 12.1258L8.05014 12.105C7.93104 11.9686 7.84505 11.7761 8.02339 11.5593L8.29536 11.2286L8.67242 11.4984C8.70554 11.5221 8.73356 11.5477 8.75777 11.5745C8.76987 11.5843 8.78579 11.5958 8.80108 11.6092C9.12273 11.8608 9.43737 12.1483 9.82271 12.5424C10.3985 13.1332 10.88 14.0553 10.5004 14.8685C10.3316 15.2278 9.90232 15.2705 8.38325 15.2376L8.21829 15.2339C7.64251 15.2242 7.04316 15.1888 6.3884 15.1285C5.36422 15.036 5.19607 15.8485 5.17059 16.1006C5.09862 16.8114 5.53046 17.6148 6.47502 17.7025C8.91827 17.9297 11.2755 17.9352 12.4411 16.7128C12.4449 16.7116 12.4462 16.7091 12.4475 16.7073C12.4972 16.6567 12.5367 16.5983 12.5806 16.5434C12.7437 16.3187 12.88 16.0617 12.9685 15.7589C13.7201 13.2617 12.1564 11.2152 10.0979 9.84412Z"/><path d="M6.38967 18.5534C5.0362 18.428 4.28845 17.345 4.27125 16.2834C3.7012 16.8267 3.0267 17.2433 2.19551 17.4388L2.17704 26.3747V34.4298C2.17704 35.296 2.84071 36.0001 3.7719 36.0001C4.70436 36.0001 5.4604 35.296 5.4604 34.4298V22.9139H6.95144C6.95144 25.6127 6.95144 31.7681 6.95144 34.467C6.95144 36.3448 9.9985 36.3448 9.9985 34.467C9.9985 31.7681 9.9985 29.0729 9.9985 26.3753L10.096 18.5955C9.6087 18.6588 9.11636 18.6844 8.63994 18.6844C7.79155 18.6838 6.9973 18.6107 6.38967 18.5534Z"/><path d="M19.6626 2.04844C19.4613 1.99423 19.2346 1.9583 19.0021 1.93089C19.4639 -1.37157 13.357 0.362492 11.6946 1.30109C10.1488 2.17452 10.9335 3.57603 12.18 4.28865C12.4851 4.46407 12.8093 4.60721 13.1436 4.72659C13.1379 4.97144 13.1997 5.22299 13.3335 5.46602C13.3857 5.7328 13.4659 5.99348 13.5869 6.23103C13.6169 6.28889 13.6532 6.34493 13.6927 6.39974C13.2698 6.70611 12.9736 7.07887 13.0284 7.47478C13.0207 8.60341 15.0474 8.63021 15.5984 9.34893C15.8971 9.73692 16.5824 9.36111 16.2805 8.96765C16.0098 8.61438 15.5837 8.39267 15.1455 8.19715C15.6232 8.05036 15.9843 7.77018 15.9429 7.3889C16.4315 7.38159 16.8869 7.24272 17.1945 6.92538C17.2607 6.85595 17.3181 6.77738 17.3627 6.69454C17.6868 6.66713 17.9919 6.62876 18.2499 6.57942C19.1046 6.41558 19.2562 5.81746 19.1059 5.18157C19.6632 5.04331 20.174 4.80881 20.5613 4.42022C21.5103 3.47004 20.7855 2.34933 19.6626 2.04844ZM13.4379 3.91468C13.4187 3.93914 13.4006 3.96461 13.3821 3.99063C13.3803 3.99312 13.3785 3.99562 13.3768 3.99812C13.2997 3.96889 13.2201 3.94513 13.1456 3.91224C12.6137 3.67896 12.059 3.40365 11.708 2.94136C11.2233 2.30547 12.1526 1.90043 12.6169 1.68725C13.5774 1.24506 14.6818 1.03309 15.7238 0.845497C16.8671 0.639017 18.376 0.561663 18.2053 1.8919C17.4748 1.91505 16.7346 2.0929 16.2015 2.47236C15.5512 2.31887 14.8786 2.3743 14.2831 2.79274C13.8748 3.07901 13.5984 3.47431 13.4379 3.91468ZM16.3805 3.38234C16.3869 3.3665 16.3926 3.35005 16.3996 3.33483C16.4818 3.37076 16.5652 3.40974 16.6461 3.45238C16.5576 3.4268 16.4697 3.40426 16.3805 3.38234ZM17.3677 4.59381C17.048 4.5731 16.7537 4.45006 16.5601 4.22105C16.848 4.3185 17.1225 4.44275 17.3677 4.59381ZM15.5716 4.00726C15.6277 4.18207 15.7175 4.34895 15.834 4.50305C15.6964 4.48722 15.5557 4.47321 15.4213 4.45554C15.0302 4.40377 14.6251 4.34164 14.2271 4.25272C14.4245 4.10654 14.6818 4.00543 14.9493 3.98777C15.1461 3.97498 15.3563 3.98472 15.5716 4.00726ZM15.0168 3.23616C15.2073 3.15454 15.4086 3.12469 15.6156 3.13566C15.599 3.17342 15.5882 3.21118 15.5754 3.24895C15.385 3.2325 15.1984 3.22885 15.0168 3.23616ZM14.6207 7.5631C14.2449 7.59233 14.05 7.49549 14.0213 7.3487C14.157 7.29936 14.3742 7.28109 14.5914 7.29023C14.9939 7.30728 15.1366 7.52351 14.6207 7.5631ZM18.0397 5.85096C17.8009 5.91552 17.541 5.93562 17.2786 5.9411C17.2748 5.93806 17.2735 5.93501 17.2709 5.93197C16.7983 5.47028 16.0754 5.53423 15.4659 5.62986C15.3442 5.64935 15.192 5.68772 15.0277 5.7401C14.8423 5.69442 14.6589 5.639 14.4831 5.55738C14.3029 5.47333 14.1723 5.38014 14.0742 5.28329C14.0608 5.18584 14.0557 5.08656 14.0576 4.98667C14.8188 5.16208 15.6098 5.24857 16.3716 5.30826C16.6442 5.32958 16.9397 5.34481 17.2404 5.3509C17.3391 5.36795 17.4378 5.37953 17.5359 5.38074C17.6372 5.38196 17.7365 5.36674 17.8359 5.34603C18.0187 5.33872 18.2002 5.32471 18.383 5.30461C18.4212 5.5519 18.3499 5.7669 18.0397 5.85096ZM18.8168 4.44884C18.6359 4.11263 18.4085 3.81052 18.2008 3.61257C17.8996 3.32508 17.5404 3.05648 17.1525 2.8439C17.2187 2.82502 17.2843 2.80797 17.3467 2.79335C17.6384 2.72635 17.9665 2.67945 18.2989 2.66483C18.4289 2.73671 18.5957 2.7428 18.7244 2.66666C19.1607 2.68737 19.5868 2.77325 19.9397 2.95841C20.9887 3.51024 19.3524 4.29414 18.8168 4.44884Z"/><path d="M13.4379 3.91468C13.4187 3.93914 13.4006 3.96461 13.3821 3.99063L13.3768 3.99812C13.2997 3.96889 13.2201 3.94513 13.1456 3.91224C12.6137 3.67896 12.059 3.40365 11.708 2.94136C11.2233 2.30547 12.1526 1.90043 12.6169 1.68725C13.5774 1.24506 14.6818 1.03309 15.7238 0.845497C16.8671 0.639017 18.376 0.561663 18.2053 1.8919C17.4748 1.91505 16.7346 2.0929 16.2015 2.47236C15.5512 2.31887 14.8786 2.3743 14.2831 2.79274C13.8748 3.07901 13.5984 3.47431 13.4379 3.91468Z"/><path d="M15.5716 4.00726C15.6277 4.18207 15.7175 4.34895 15.834 4.50305C15.6964 4.48722 15.5557 4.47321 15.4213 4.45554C15.0302 4.40377 14.6251 4.34164 14.2271 4.25272C14.4245 4.10654 14.6818 4.00543 14.9493 3.98777C15.1461 3.97498 15.3563 3.98472 15.5716 4.00726Z"/><path d="M15.0168 3.23616C15.2073 3.15454 15.4086 3.12469 15.6156 3.13566C15.599 3.17342 15.5882 3.21118 15.5754 3.24895C15.385 3.2325 15.1984 3.22885 15.0168 3.23616Z"/><path d="M17.3677 4.59381C17.048 4.5731 16.7537 4.45006 16.5601 4.22105C16.848 4.3185 17.1225 4.44275 17.3677 4.59381Z"/><path d="M18.8168 4.44884C18.6359 4.11263 18.4085 3.81052 18.2008 3.61257C17.8996 3.32508 17.5404 3.05648 17.1525 2.8439C17.2187 2.82502 17.2843 2.80797 17.3467 2.79335C17.6384 2.72635 17.9665 2.67945 18.2989 2.66483C18.4289 2.73671 18.5957 2.7428 18.7244 2.66666C19.1607 2.68737 19.5868 2.77325 19.9397 2.95841C20.9887 3.51024 19.3524 4.29414 18.8168 4.44884Z"/><path d="M18.0397 5.85096C17.8009 5.91552 17.541 5.93562 17.2786 5.9411C17.2748 5.93806 17.2735 5.93501 17.2709 5.93197C16.7983 5.47028 16.0754 5.53423 15.4659 5.62986C15.3442 5.64935 15.192 5.68772 15.0277 5.7401C14.8423 5.69442 14.6589 5.639 14.4831 5.55738C14.3029 5.47333 14.1723 5.38014 14.0742 5.28329C14.0608 5.18584 14.0557 5.08656 14.0576 4.98667C14.8188 5.16208 15.6098 5.24857 16.3716 5.30826C16.6442 5.32958 16.9397 5.34481 17.2404 5.3509C17.3391 5.36795 17.4378 5.37953 17.5359 5.38074C17.6372 5.38196 17.7365 5.36674 17.8359 5.34603C18.0187 5.33872 18.2002 5.32471 18.383 5.30461C18.4212 5.5519 18.3499 5.7669 18.0397 5.85096Z"/><path d="M14.6207 7.5631C14.2449 7.59233 14.05 7.49549 14.0213 7.3487C14.157 7.29936 14.3742 7.28109 14.5914 7.29023C14.9939 7.30728 15.1366 7.52351 14.6207 7.5631Z"/></svg>',
    gait_style:'<svg viewBox="0 0 17 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.627375 31.2481C0.0945217 32.1979 0.123544 33.3698 1.03659 34.0746C1.81788 34.6763 3.20863 34.5981 3.74265 33.6476C4.84666 31.6799 6.84863 30.1981 6.84863 30.1981C6.84863 30.1981 6.11146 28.501 5.76261 25.3208C5.76261 25.3208 1.88347 29.008 0.627375 31.2481Z"/><path d="M16.3756 14.1322C14.1101 12.025 11.6797 10.1344 9.0201 8.61374C8.73394 8.38749 8.40656 8.21037 8.0612 8.0921C7.83018 7.99444 7.60322 7.94713 7.38497 7.94046C7.01987 7.89678 6.65418 7.91619 6.31927 8.01021C5.43524 8.25769 4.83854 8.823 4.49898 9.54238C2.86037 11.5422 1.49166 13.7155 0.263432 16.0119C-0.956093 18.2902 2.38614 20.3288 3.6045 18.0524C3.98528 17.3397 4.37766 16.6373 4.78746 15.9482C5.14095 18.4376 5.49387 20.9269 5.8462 23.4156C5.91759 23.9202 6.14745 24.3545 6.46844 24.7076C6.98156 28.2511 7.92363 31.7467 9.409 34.9626C10.4927 37.31 13.8285 35.258 12.7501 32.9216C11.6402 30.519 10.8984 27.8592 10.4416 25.1764C11.4458 24.4455 11.8097 23.1293 11.6217 21.7985C11.2722 19.3407 10.9246 16.8817 10.5751 14.4234C11.6327 15.221 12.6531 16.0762 13.637 16.9915C15.4985 18.7172 18.2446 15.8682 16.3756 14.1322Z"/><path d="M7.09417 7.04578C8.95606 7.04578 10.4654 5.46853 10.4654 3.52289C10.4654 1.57725 8.95606 0 7.09417 0C5.23227 0 3.72291 1.57725 3.72291 3.52289C3.72291 5.46853 5.23227 7.04578 7.09417 7.04578Z"/></svg>',
    indecent:'<svg viewBox="0 0 27 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M25.0173 12.9581H27V22.4908H25.0173V12.9581Z"/><path d="M10.1512 25.9774H9.3583V24.0476H27V25.9774H25.0173V36H18.1792C18.1792 32.4625 15.5304 32.6596 15.5304 32.6596C8.81964 31.4806 10.1512 25.9774 10.1512 25.9774Z"/><path d="M1.21524 6.60476C0.738941 5.9239 0.457956 5.09898 0.457956 4.20747C0.457956 1.88426 2.357 0 4.70151 0C7.04532 0 8.94505 1.88358 8.94505 4.20747C8.94505 6.53137 7.04532 8.41563 4.70151 8.41563C4.29236 8.41563 3.89967 8.35515 3.52548 8.24847C3.95861 10.0627 4.64462 11.7873 5.38683 13.4929C5.78706 12.884 6.201 12.2834 6.60534 11.6772C6.04749 9.00544 8.94505 5.82265 12.0784 7.59615C15.5927 9.58437 18.3628 12.8005 19.9658 16.467C20.7669 18.2997 20.5065 20.3912 18.6123 21.4757C18.5554 21.5089 18.4944 21.5354 18.4348 21.5647C18.1017 21.8011 17.6926 21.9622 17.2046 22.0077C13.5635 22.3502 9.88669 22.4181 6.22224 22.4446C7.34138 25.7986 8.64625 29.0983 9.9703 32.3687C11.1217 35.2104 6.49158 36.4315 5.35668 33.6285C3.63513 29.3796 1.94443 25.0804 0.657387 20.6786C0.111181 18.81 1.76899 17.627 3.27328 17.7588C3.33976 17.7459 3.40487 17.7343 3.47545 17.7275C2.22884 14.7262 0.703991 11.8376 0.0412788 8.63375C-0.16843 7.62197 0.451103 6.88607 1.21524 6.60476ZM12.175 17.5828C11.3156 16.2992 10.2677 15.1909 8.99097 14.3361C8.25835 15.4199 7.54356 16.5146 6.96925 17.6929C8.7045 17.6779 10.4411 17.6494 12.175 17.5828Z"/></svg>',
    physical_exercise:'<svg viewBox="0 0 37 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.38896 26.3762C4.23587 25.6606 7.69094 24.6783 8.40284 24.313C8.80281 23.9907 10.8819 21.5229 10.8819 21.5229L12.0329 14.9213C10.1065 15.5163 9.57613 16.7376 8.94576 19.086C8.77536 19.7192 8.20139 20.1388 7.57507 20.1388C7.4538 20.1388 7.33012 20.1234 7.20667 20.0907C6.4497 19.8884 5.99933 19.1089 6.2031 18.3534C7.95029 10.5589 16.2363 11.7065 16.2552 11.7076C19.1713 11.9025 21.6554 11.171 21.858 10.8601C22.0814 10.5378 22.9805 9.09202 23.1178 6.44936C23.1582 5.66667 23.8307 5.06169 24.6093 5.10656C24.791 5.116 24.9615 5.1617 25.1191 5.23258C24.5947 4.67652 24.2684 3.93264 24.2684 3.10882C24.2684 1.39172 25.6609 0 27.3799 0C29.0989 0 30.4902 1.39149 30.4902 3.10867C30.4902 4.82494 29.0976 6.21576 27.3798 6.21576C26.7582 6.21576 26.183 6.03003 25.6972 5.71566C25.8706 5.96567 25.9695 6.26888 25.9538 6.59613C25.7709 10.115 24.4834 12.0913 24.0918 12.6128C23.3314 13.6296 21.2481 14.2579 19.0156 14.4814C19.0135 14.4908 19.0129 14.498 19.0118 14.508L17.2637 22.8418C17.2637 22.8418 17.7125 27.4523 17.5522 28.6359C17.4863 29.1354 17.3141 30.462 12.1049 35.4851C11.7497 35.8286 11.2884 36 10.829 36C10.3501 36 9.86833 35.8119 9.50863 35.4394C8.80484 34.7112 8.82561 33.549 9.55431 32.8459C11.3571 31.1039 13.918 28.0206 13.918 28.0206C13.918 28.0206 13.8207 25.9539 13.6485 24.3674C13.6375 24.2153 13.3719 24.1263 13.2583 24.2646C12.9684 24.6401 11.1168 26.9244 10.4115 27.3855C9.31303 28.1021 4.84794 29.2892 2.28498 29.9321C2.13446 29.9712 1.98341 29.9895 1.83528 29.9895C1.01494 29.9895 0.266518 29.4351 0.0565186 28.6013C-0.192329 27.6187 0.403767 26.6207 1.38896 26.3762Z"/><path d="M15.9479 11.1317C13.9729 10.7085 12.7137 8.76619 13.1376 6.79444C13.5604 4.82157 15.5039 3.56508 17.4783 3.98823C19.4548 4.41145 20.7123 6.35316 20.2892 8.32409C19.8659 10.297 17.9223 11.554 15.9479 11.1317Z"/><path d="M36.3398 6.96361L37 6.97335L34.8801 15.9462L29.5049 15.9398L27.6968 6.95829L36.3398 6.96361ZM30.1753 15.4449L30.3681 15.0699L30.5611 15.4454L31.0981 15.446L30.6364 14.548L31.3228 13.2129L32.0092 14.548L31.5472 15.4466L32.0835 15.4472L32.2774 15.0699L32.4716 15.4477L33.0085 15.4483L32.5457 14.548L33.2321 13.2129L33.9186 14.548L33.4554 15.4489L33.9916 15.4495L34.1868 15.07L34.3821 15.45L34.487 15.4501L34.6229 14.8745L34.455 14.548L34.9078 13.6673L35.3633 11.7378L35.1414 12.1693L34.455 10.8342L35.1414 9.49906L35.6556 10.4992L35.8248 9.78383L35.4101 8.97709L36.1903 7.45958L35.6539 7.45928L35.1418 8.45527L34.6293 7.45861L33.7451 7.45801L33.2324 8.45527L32.7193 7.45734L31.8364 7.45674L31.323 8.45527L30.8092 7.45606L29.9276 7.45546L29.4136 8.45527L28.8992 7.45479L28.3624 7.45441L29.1452 8.97724L28.7602 9.72629L28.9112 10.4763L29.4136 9.49914L30.1 10.8343L29.4136 12.1694L29.148 11.6529L29.4933 13.3682L30.0999 14.5481L29.8347 15.064L29.9113 15.4447L30.1753 15.4449Z"/><path d="M33.2323 9.49899L33.9186 10.8341L33.2323 12.1692L32.5459 10.8341L33.2323 9.49899Z"/><path d="M34.8733 12.691L34.1871 14.0261L33.5004 12.691L34.1871 11.3559L34.8733 12.691Z"/><path d="M32.9639 12.691L32.2777 14.0261L31.591 12.691L32.2777 11.3559L32.9639 12.691Z"/><path d="M31.3229 9.49899L32.0092 10.8341L31.3229 12.1692L30.6363 10.8341L31.3229 9.49899Z"/><path d="M30.3682 11.3559L31.0546 12.691L30.3682 14.0261L29.6816 12.691L30.3682 11.3559Z"/><path d="M29.6816 8.97717L30.3682 7.64209L31.0546 8.97717L30.3682 10.3122L29.6816 8.97717Z"/><path d="M33.5004 8.97717L34.1871 7.64209L34.8733 8.97717L34.1871 10.3122L33.5004 8.97717Z"/><path d="M31.591 8.97717L32.2777 7.64209L32.9639 8.97717L32.2777 10.3122L31.591 8.97717Z"/></svg>',
    racks:'<svg viewBox="0 0 20 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.61811 6.91328C11.3416 6.91328 12.7388 5.51103 12.7388 3.78127C12.7388 2.05151 11.3416 0.649259 9.61811 0.649259C7.89461 0.649259 6.49743 2.05151 6.49743 3.78127C6.49743 5.51103 7.89461 6.91328 9.61811 6.91328Z"/><path d="M19.575 14.5392L13.4244 8.28388C13.3497 8.2077 13.2683 8.14267 13.1825 8.08693C12.8474 7.80451 12.3136 7.6472 11.454 7.8138C10.3074 8.27335 6.82388 7.33443 5.99512 7.0997L3.5804 5.82819L6.57889 2.27503C7.01456 1.58385 6.80969 0.668458 6.12224 0.229965C5.43232 -0.20791 4.51963 -0.00166915 4.08457 0.689516L0.228937 5.60027C0.00863226 5.9502 -0.0567806 6.37755 0.0505947 6.77702C0.156736 7.17712 0.425174 7.51342 0.78988 7.70604L5.17376 10.0125L6.30922 22.1708L7.78532 34.2077C7.78532 35.198 8.50733 36 9.52122 36C10.5357 36 11.3571 35.198 11.3571 34.2077L9.88099 21.6679C9.88099 21.6679 9.94023 21.0318 10.5851 21.025C11.2306 21.0182 11.2145 21.6363 11.2145 21.6363L12.69 34.173C12.69 35.1627 13.5126 35.9653 14.5265 35.9653C15.5398 35.9653 16.363 35.1627 16.363 34.173L14.9468 21.2355C14.9468 21.1575 14.4506 16.5211 14.0927 13.1823L17.4738 16.6202C17.762 16.9138 18.1427 17.0606 18.5241 17.0606C18.8968 17.0606 19.2726 16.9187 19.5608 16.6345C20.1403 16.0591 20.1477 15.1208 19.575 14.5392Z"/></svg>',
    social:'<svg viewBox="0 0 24 36" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M5.42691 6.93884C7.27404 6.93884 8.77144 5.38554 8.77144 3.46945C8.77144 1.55336 7.27404 6.10352e-05 5.42691 6.10352e-05C3.57979 6.10352e-05 2.08239 1.55336 2.08239 3.46945C2.08239 5.38554 3.57979 6.93884 5.42691 6.93884Z"/><path d="M23.9973 21.4523C23.8495 17.4362 23.3565 13.4465 22.6142 9.50465C22.0289 6.39993 18.2895 6.78854 17.1431 9.02562C17.0871 9.09987 17.0346 9.17772 16.9867 9.26514C15.6533 11.7064 14.0208 13.8926 12.0005 15.7285C9.98075 13.8932 8.34832 11.707 7.01374 9.26574C6.95948 9.16574 6.89945 9.07832 6.83595 8.99688C5.66878 6.78615 1.97156 6.40532 1.39028 9.48909C0.649686 13.4231 0.150952 17.4003 0.00260145 21.4062C-0.0239515 22.1337 0.154415 22.7289 0.462083 23.193C0.430912 23.3307 0.411864 23.4798 0.411864 23.6409C0.411864 27.1708 0.411864 30.7012 0.411864 34.2323C0.411864 36.5885 3.93244 36.5885 3.93244 34.2323C3.93244 30.9018 3.93244 27.5695 3.93244 24.2397C5.00611 23.8798 5.89505 22.9529 5.95047 21.4523C6.0307 19.2739 6.21831 17.1171 6.5052 14.9704C7.64582 16.438 8.92209 17.7793 10.3427 19.0069C10.6255 19.738 11.2663 20.2757 11.9999 20.1392C12.7336 20.2763 13.3738 19.738 13.6572 19.0069C15.0778 17.7793 16.354 16.438 17.4941 14.9698C17.7804 17.1021 17.9686 19.2434 18.05 21.4068C18.1054 22.911 18.9926 23.8499 20.0668 24.2229C20.0668 27.5588 20.0668 30.8958 20.0668 34.2329C20.0668 36.5891 23.5874 36.5891 23.5874 34.2329C23.5874 30.7024 23.5874 27.1714 23.5874 23.6415C23.5874 23.4888 23.5724 23.3481 23.5447 23.2146C23.8483 22.7571 24.0244 22.1721 23.9973 21.4523Z"/><path d="M18.5741 6.93884C20.4212 6.93884 21.9186 5.38554 21.9186 3.46945C21.9186 1.55336 20.4212 6.10352e-05 18.5741 6.10352e-05C16.727 6.10352e-05 15.2296 1.55336 15.2296 3.46945C15.2296 5.38554 16.727 6.93884 18.5741 6.93884Z"/></svg>',
}
const XNavigation = {
    template:
    `
    <div class="animation__navigation">
        <div class="navigation__paragraph" v-for="category in categoriesList" :class="{active:isActive(category)}" @click="setCategory(category)">
            <div class="paragraph__image" v-html="getImage(category)"></div>
            <p class="paragraph__text">{{getName(category)}}</p>
        </div>
    </div>
    `,
    props:{
        categoriesList:{
            type:Array
        },
        activeCategory:{
            type:Object
        }
    },
    data(){
        return{
            SVGImages
        }
    },
    methods:{
        getImage(category){
            return (category && category.img && this.SVGImages[category.img])?this.SVGImages[category.img]:'';
        },
        getName(category){
            return (category && category.name)?category.name:'';
        },
        isActive(category){
            return (category === this.activeCategory)?true:false;
        },
        setCategory(category){
            if(!this.isActive(category)){
                this.$emit('setcategory',category);
            }
        }
    },
    watch:{
        categoriesList:function(newValue,oldValue){
            if(Array.isArray(oldValue) && !oldValue.length && !this.activeCategory && Array.isArray(newValue) && newValue.length){
                this.$emit('setcategory',newValue[0]);
            }
        }
    }
}
const XMenu = {
    template:
    `
    <div class="animation__main">
        <p class="main__header">Анимации</p>
        <div class="main__list">
            <div class="main__cell" v-for="animation in animationList" @mousedown="setDrag(animation)" :key="animation.id" @click="playAnimation(animation)" :class="{active:isActive(animation)}">
                <div class="cell__image" v-html="getImage"></div>
                <div class="cell__text">
                    <p class="cell__title">{{categoryName}}</p>
                    <p class="cell__subtitle">{{getName(animation)}}</p>
                </div>
            </div>
        </div>
        <div class="quick__block">
            <p class="quick__title">Быстрый доступ</p>
            <p class="quick__subtitle">Для добавления/удаления анимации в быстрый доступ - зажмите ЛКМ и перетащите анимацию в нужную ячейку</p>
            <div class="quick__menu">
                <div class="menu__cell" v-for="i in 6" :data-slot="i">
                    <div class="anim__slot" :class="{free:isFree(i),drag:isDragging}">
                        <div class="cell__image" v-html="getFastImage(i)" v-show="!isFree(i)"></div>
                            <div class="cell__text" v-show="!isFree(i)">
                                <p class="cell__title">{{getFastTitle(i)}}</p>
                                <p class="cell__subtitle">{{getSubTitle(i)}}</p>
                            </div>
                            <div class="cell__close" v-show="!isFree(i)" @click="deleteQuick(i)">
                                <svg width="8" height="8" viewBox="0 0 8 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M5.32003 4.00023L7.79489 1.52538C8.06837 1.2519 8.06837 0.80854 7.79489 0.535527L7.46494 0.205577C7.19146 -0.0679034 6.7481 -0.0679034 6.47509 0.205577L4.00023 2.68043L1.52538 0.20511C1.2519 -0.0683701 0.80854 -0.0683701 0.535527 0.20511L0.20511 0.53506C-0.0683701 0.80854 -0.0683701 1.2519 0.20511 1.52491L2.68043 4.00023L0.205577 6.47509C-0.0679034 6.74857 -0.0679034 7.19193 0.205577 7.46494L0.535527 7.79489C0.809007 8.06837 1.25236 8.06837 1.52538 7.79489L4.00023 5.32003L6.47509 7.79489C6.74857 8.06837 7.19193 8.06837 7.46494 7.79489L7.79489 7.46494C8.06837 7.19146 8.06837 6.7481 7.79489 6.47509L5.32003 4.00023Z"/>
                                </svg>
                            </div>
                        <div class="slot__number">{{i}}</div>
                    </div>
                </div>
            </div>
        </div>
        <p class="help__footer">
            <span>ESC</span> - Закрыть окно
        </p>
    </div>
    `,
    props:{
        animationList:{
            type:Array
        },
        activeCategory:{
            type:Object
        },
        fastSlots:{
            type:Object
        },
        walkStyle:{
            type:String
        }
    },
    data(){
        return{
            isDragging:false,
            draggableItem:null,
        }
    },
    computed:{
        categoryName(){
            return (this.activeCategory && this.activeCategory.name)?this.activeCategory.name:''
        },
        getImage(){
            return (this.activeCategory && this.activeCategory.img && SVGImages[this.activeCategory.img])?SVGImages[this.activeCategory.img]:''
        },
        isSpecial(){
            return(this.activeCategory && this.activeCategory.special)?true:false
        },
        getCurent(){
            if(this.isSpecial && this.walkStyle!==null){
                let style = this.animationList.find(animation=>animation.style===this.walkStyle)
                return style;
            }
        }
    },
    methods:{
        setDrag(animation){
            this.draggableItem = this.animationClone(animation);
        },
        deleteQuick(i){
            this.fastSlots[i] = [];
        },
        isActive(style){
            return (style===this.getCurent)?true:false;
        },
        elementAdd(element,i){
            this.fastSlots[i] = [element];
        },
        getName(animation){
            return (animation && animation.name)?animation.name:''
        },
        playAnimation(animation){
            this.$emit('play',animation,this.isSpecial);
        },
        animationClone(animation) {
            let animationClone = JSON.parse(JSON.stringify(animation));
            if(this.activeCategory) animationClone.category = JSON.parse(JSON.stringify(this.activeCategory));
            return animationClone;
        },
        getFastImage(i){
            let image = this.fastSlots[i].length && this.fastSlots[i][0] && (this.fastSlots[i][0]).category && (this.fastSlots[i][0]).category.img;
            return (image && SVGImages[image])?SVGImages[image]:'';
        },
        getFastTitle(i){
            return (this.fastSlots[i].length && this.fastSlots[i][0] && (this.fastSlots[i][0]).category && (this.fastSlots[i][0]).category.name)?(this.fastSlots[i][0]).category.name:'';
        },
        getSubTitle(i){
            return (this.fastSlots[i].length && this.fastSlots[i][0] && (this.fastSlots[i][0]).name)?(this.fastSlots[i][0]).name:'';
        },
        isFree(i){
            return (this.fastSlots[i].length===0)?true:false;
        },
    },
    watch:{
        animationList:function(val){
            let xapp = this;
            this.$nextTick(() => {
                $('.main__cell').draggable({
                    helper: 'clone',
                    scroll: false,
                    start:function (e) {
                        xapp.isDragging = true;
                    },
                    stop:function (e) {
                        xapp.isDragging = false;
                    }
                });
                $( ".menu__cell" ).droppable({
                    drop: function(){
                        let slot = $(this).data('slot');
                        xapp.elementAdd(xapp.draggableItem,slot);
                    }
                });
                if(this.isSpecial){
                    $('.main__cell').draggable('disable');
                }
                if(!this.isSpecial){
                    $('.main__cell').draggable('enable');
                }
            });
        }
    }
}
const animations = new Vue({
    el:'#app',
    data:{
        isActive:false,
        categoriesList:[],
        activeCategory:null,
        animationList:[],
        fastSlots:{1:[],2:[],3:[],4:[],5:[],6:[]},
        walkStyle:null,
    },
    components:{
        'xnavigation':XNavigation,
        'xmenu':XMenu,
    },
    methods:{
        setCategory(category){
            this.activeCategory = category;
            mp.trigger('setAnimCategory',category.id);
        },
        closeApp(){
            this.isActive = false;
            mp.trigger('saveSlots',JSON.stringify(this.fastSlots));
        },
        playAnim(animation,isSpecial){
            if(isSpecial){
                this.walkStyle = animation.style;
                mp.trigger('setWalk',JSON.stringify(animation));
            }else{
                mp.trigger('playAnim',JSON.stringify(animation));
            }
        },
        bindClose(){
            window.addEventListener('keyup',e=>{
                if(e.key==="Escape"){
                    this.closeApp();
                }
            })
        }
    },
    mounted(){
        this.isActive = true;
        this.bindClose();
    }
})








// let browserCategories = [];
// animationList.forEach(category=>{
    // let oneCategory = {};
    // browserCategories.push({
        // id:category.id,
        // name:category.name,
        // img:category.img,
        // special:category.special,
    // })
// })
// animations.categoriesList = browserCategories;
// animations.walkStyle = "clipset@move@trash_fast_turn";
// var mp={
    // trigger(name,...args){
        // if(name==='setAnimCategory'){
            // animations.animationList = animationList.find(category=>category.id===args[0]).animations
        // }
        // if(name==='saveSlots'){
            // console.log('saveSlots',args[0])
        // }
        // if(name==="setWalk"){
            // console.log('setWalk',args[0])
        // }
        // if(name==="playAnim"){
            // console.log('playAnim',args[0])
        // }
    // }
// }







